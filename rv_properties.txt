# ##########################################################################
# The specifications are taken from
#
# http://patterns.projects.cis.ksu.edu/documentation/specifications/ALL.raw.
#
# Typed in in their present form by Andreas Bauer (2009-04-30)
#
# Lines starting with '-' are those that can be parsed by ltl3tools.
# Lines starting with '@' are not processed, as they take about 20 min
# to process on my dual core machine. 
#
# Formulas marked as ??? are not processed at all due to other problems, not
# specified above.
#
# ##########################################################################

PATTERN: Constrained Response-chain 2-1
LTL: [](call_Enqueue(d1) & (!return_Dequeue(d1) U call_Top_Down) ->
        <>(call_Top_Down & <>call_P(d1,*)))
- [](ced1 && ((! rd1) U ctd) -> <>(ctd && <>cp1))

PATTERN: Global
LTL: [] p
- [] p

PATTERN: Existence
LTL: <> r->(p -> !r U(q && ! r)) U r
- <> r->(p -> !r U(q && ! r)) U r

PATTERN: Constrained Response-chain 2-1
LTL: [] (p && X <> q -> X <> (q && <> r))
- [](p && X <> q -> X <> (q && <> r))

PATTERN: Constrained Response-chain 2-1
LTL: [] (p -> [] (q -> r && X <> s))
- [] (p -> [] (q -> r && X <> s))

PATTERN: Constrained Response-chain 2-1
LTL: [] (p -> <> (q && X <> r))
- [] (p -> <> (q && X <> r))

PATTERN: Constrained Response-chain 2-1
LTL: [] (s && <> t -> (p -> ! t U (q && ! t && X (! t U r))) U t)
- [] (s && <> t -> (p -> ! t U (q && ! t && X (! t U r))) U t)

PATTERN: Constrained Response-chain 2-1
LTL: <> s -> (p -> ! s U (q && ! s && X (! s U r))) U s
- <> s -> (p -> ! s U (q && ! s && X (! s U r))) U s

PATTERN: Constrained Response-chain 2-1
[] (s -> [] (q && X <> r -> X (! r U (r && <> p))))
- [] (s -> [] (q && X <> r -> X (! r U (r && <> p))))

PATTERN: Constrained Response-chain 2-1
<> s -> (q && X (! s U r) -> X (! s U (r && <> p))) U s
- <> s -> (q && X (! s U r) -> X (! s U (r && <> p))) U s

PATTERN: Constrained Response-chain 2-1
LTL: [] (s && <> t -> (q && X (! t U r) -> X (! t U (r && <> p))) U t)
- [] (s && <> t -> (q && X (! t U r) -> X (! t U (r && <> p))) U t)

PATTERN: Bounded Existence
LTL: <> q -> (! p && ! q) U (q || (p && ! q) U (q || (! p && ! q) U (q || (p && ! q) U (q || ! p U q))))
- <> q -> (! p && ! q) U (q || (p && ! q) U (q || (! p && ! q) U (q || (p && ! q) U (q || ! p U q))))

PATTERN: Bounded Existence
LTL: [] (q && <> r -> (! p && ! r) U (r || (p && ! r) U (r || (! p && ! r) U (r || (p && ! r) U (r || ! p U r)))))
- [] (q && <> r -> (! p && ! r) U (r || (p && ! r) U (r || (! p && ! r) U (r || (p && ! r) U (r || ! p U r)))))

PATTERN:  Existence
LTL: [](q && ! r -> ! r U (p && ! r))
- [](q && ! r -> ! r U (p && ! r))

PATTERN:  Existence
LTL: []!q||<> (q && <> p)
- []!q||<> (q && <> p)

PATTERN:  Response
LTL: [] (s && ! r && <> r -> (p -> ! r U (q && ! r)) U r)
- [] (s && ! r && <> r -> (p -> ! r U (q && ! r)) U r)

PATTERN:  Response
LTL: <> r -> (p -> ! r U (q && ! r)) U r
- <> r -> (p -> ! r U (q && ! r)) U r

PATTERN:  Absence
LTL: [] (q && ! r && <> r -> ! p U r)
- [] (q && ! r && <> r -> ! p U r)

PATTERN:  Unknown
LTL: [] (! p || ! q) && [] (! p || ! r) && [] (! q || ! r)
- [] (! p || ! q) && [] (! p || ! r) && [] (! q || ! r)

PATTERN:  Unknown
LTL: ![] (p -> ! q U p)
- ![] (p -> ! q U p)

PATTERN:  Unknown
LTL: <> (p -> <>q)
- <> (p -> <>q)

PATTERN:  Unknown
LTL: [](p -> q && ! r)
- [](p -> q && ! r)

PATTERN:  Unknown
LTL: !(<> p -> ! q U (r || p))
- !(<> p -> ! q U (r || p))

PATTERN:  Unknown
LTL: [] (destino -> X (monster U (ingreso && X (error || ok))))
- [] (destino -> X (monster U (ingreso && X (error || ok))))

PATTERN:  Unknown
LTL: [] (p -> [] (q && ! r && X (! r U s)))
- [] (p -> [] (q && ! r && X (! r U s)))

PATTERN:  Unknown
LTL: !([] s -> (q && X (! s U r) -> X (! s U (r && [] p))) U s)
- !([] s -> (q && X (! s U r) -> X (! s U (r && [] p))) U s)

PATTERN:  Unknown
LTL: ![] (p -> [] (q -> r && ! s && X (! s U t)))
- ![] (p -> [] (q -> r && ! s && X (! s U t)))

PATTERN:  Unknown
LTL: !([] [] p && [] [] q)
- !([] [] p && [] [] q)

PATTERN:  Unknown
LTL: [][]q||[]p
- [][]q||[] p

PATTERN:  Unknown
LTL: X <> p
- X <> p 

PATTERN:  Unknown
LTL: [] p || <> q
- [] p || <> q

PATTERN:  Unknown
LTL: [] ! p || <> ! q
- [] ! p || <> ! q

PATTERN:  Unknown
LTL: ![] (<> p && q)
- ![] (<> p && q)

PATTERN:  Unknown
LTL: ![] (p -> p U q)
- ![] (p -> p U q)

PATTERN:  Unknown
LTL: <>(p && (! p || q) R (p || ! q))
- <>(p && (! p || q) R (p || ! q))

PATTERN:  Unknown
LTL: !(<> r -> (p -> ! r U (q && ! r)) U r)
- !(<> r -> (p -> ! r U (q && ! r)) U r)

PATTERN:  Unknown
LTL: [](p -> X <> q)
- [](p -> X <> q)

PATTERN:  Unknown
LTL: p && [] (p -> X X p)
- p && [] (p -> X X p)

PATTERN:  Unknown
LTL: <> [] (p U q)
- <> [] (p U q)

PATTERN:  Unknown
LTL: <> [] (<> p -> q)
- <> [] (<> p -> q)

PATTERN:  Unknown
LTL: [] (p -> [] (! p U q))
- [] (p -> [] (! p U q))

PATTERN:  Unknown
LTL: [] (b -> X (a U b))
- [] (b -> X (a U b))

PATTERN:  Unknown
LTL: <> a U [] b
- <> a U [] b

PATTERN:  Unknown
LTL: [](<> p -> <> q)
- [](<> p -> <> q)

PATTERN:  Unknown
LTL: [](p -> X <> (q || r))
- [](p -> X <> (q || r))

PATTERN:  Unknown
LTL: [](p -> [] <> (q || r))
- [](p -> [] <> (q || r))

PATTERN:  Unknown
LTL: []<> ! p && <> ! q
- []<> ! p && <> ! q

PATTERN:  Unknown
LTL: X X [] p
- X X [] p

PATTERN:  Unknown
LTL: [](p -> p U (q U r)
- [](p -> p U q U r)

PATTERN:  Unknown
LTL: ![] (p -> <> (q && <> r))
- ![] (p -> <> (q && <> r))

PATTERN:  Unknown
LTL: [](p -> <> [] q)
- [](p -> <> [] q)

PATTERN:  Unknown
LTL: ![] (p -> [] (q -> <> r))
- ![] (p -> [] (q -> <> r))

PATTERN:  Unknown
LTL: !(<> p -> ! p U (q && ! p && X (! p U r)))
- !(<> p -> ! p U (q && ! p && X (! p U r)))

PATTERN:  Unknown
LTL: ![] (p -> <> (q && X <> r))
- ![] (p -> <> (q && X <> r))

PATTERN:  Unknown
LTL: <> [] a && [] <> q
- <> [] a && [] <> q
