# ##########################################################################
# The specifications are taken from
#
# http://patterns.projects.cis.ksu.edu/documentation/specifications/ALL.raw.
#
# Typed in in their present form by Andreas Bauer (2009-04-30)
#
# Lines starting with '-' are those that can be parsed by ltl3tools.
# Lines starting with '@' are not processed, as they take about 20 min
# to process on my dual core machine. 
#
# Formulas marked as ??? are not processed at all due to other problems, not
# specified above.
#
# ##########################################################################

PATTERN: Constrained Response-chain 2-1
LTL: [](call_Enqueue(d1) & (!return_Dequeue(d1) U call_Top_Down) ->
        <>(call_Top_Down & <>call_P(d1,*)))
- [](ced1 && ((! rd1) U ctd) -> <>(ctd && <>cp1))

PATTERN: Global
LTL: [] p
- [] p

PATTERN: Existence
LTL: <> r->(p -> !r U(q && ! r)) U r
- <> r->(p -> !r U(q && ! r)) U r

PATTERN: Existence
LTL: []((a U b) | (c U d))
- []((a U b) | (c U d))

PATTERN: Existence
LTL: (x1 & X[]((a1 U b1) | (c2 U d2))) | (!x1 & X[]((c2 U d2) | (a2 U b2)))
- (x1 & X[]((a1 U b1) | (c2 U d2))) | (!x1 & X[]((c2 U d2) | (a2 U b2)))

PATTERN: Constrained Response-chain 2-1
LTL: [] (p && X <> q -> X <> (q && <> r))
-[] (p && X <> q -> X <> (q && <> r))

PATTERN: Constrained Response-chain 2-1
[] (p -> [] (q -> r && X <> s))
- [] (p -> [] (q -> r && X <> s))

PATTERN: Constrained Response-chain 2-1
[] (p -> <> (q && X <> r))
- [] (p -> <> (q && X <> r))

PATTERN: Constrained Response-chain 2-1
[] (s && <> t -> (p -> ! t U (q && ! t && X (! t U r))) U t)
-[] (s && <> t -> (p -> ! t U (q && ! t && X (! t U r))) U t)

PATTERN: Constrained Response-chain 2-1
<> s -> (p -> ! s U (q && ! s && X (! s U r))) U s
- <> s -> (p -> ! s U (q && ! s && X (! s U r))) U s
PATTERN: Constrained Response-chain 2-1
[] (s -> [] (q && X <> r -> X (! r U (r && <> p))))
- [] (s -> [] (q && X <> r -> X (! r U (r && <> p))))

PATTERN: Constrained Response-chain 2-1
<> s -> (q && X (! s U r) -> X (! s U (r && <> p))) U s
- <> s -> (q && X (! s U r) -> X (! s U (r && <> p))) U s

PATTERN: Constrained Response-chain 2-1
[] (s -> (p -> ! t U (q && ! t && X (! t U r))) U (t || [] (p -> q && X <> r)))
-[] (s -> (p -> ! t U (q && ! t && X (! t U r))) U (t || [] (p -> q && X <> r)))

PATTERN: Constrained Response-chain 2-1
[] (s && <> t -> (q && X (! t U r) -> X (! t U (r && <> p))) U t)
-[] (s && <> t -> (q && X (! t U r) -> X (! t U (r && <> p))) U t)

PATTERN: Constrained Response-chain 2-1
[] (s -> (q && X (! t U r) -> X (! t U (r && <> p))) U (t || [] (q && X (! t U r) -> X (! t U (r && <> p)))))
- [] (s -> (q && X (! t U r) -> X (! t U (r && <> p))) U (t || [] (q && X (! t U r) -> X (! t U (r && <> p)))))
